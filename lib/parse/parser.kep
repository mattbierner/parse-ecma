/**
 * @fileOverview
 */
package (
    parseStream
    parse)
with
    import 'bennu::parse' {
        runState
        ParserState},
    
   import 'nu-stream::stream' {
        'from': streamFrom},
    
    import './position' Position,
    import './parser_stream' parserStream,

    import './program_parser' {program}
in {

/**
 * Parses a lex stream to an AST.
 * 
 * Throws parse errors.
 * 
 * @param s Stream of tokens.
 * 
 * @return AST.
 */
parseStream = \s ->
    runState(
        program,
        new ParserState(
            parserStream s,
            Position.initial));

/**
 * Parses a token array to an AST.
 * 
 * @see parserStream
 * 
 * @param input Array-like of tokens.
 */
parse = streamFrom \> parserStream;

}